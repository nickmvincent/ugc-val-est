# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-22 12:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('uid', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('msg', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='RedditPost',
            fields=[
                ('created_utc', models.IntegerField()),
                ('subreddit', models.CharField(blank=True, max_length=24, null=True)),
                ('subreddit_id', models.CharField(blank=True, max_length=8, null=True)),
                ('author', models.CharField(max_length=20)),
                ('domain', models.CharField(max_length=275)),
                ('url', models.CharField(max_length=31215)),
                ('num_comments', models.IntegerField()),
                ('score', models.IntegerField()),
                ('title', models.CharField(max_length=1182)),
                ('selftext', models.CharField(max_length=74185)),
                ('saved', models.BooleanField()),
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('gilded', models.IntegerField()),
                ('stickied', models.BooleanField()),
                ('retrieved_on', models.IntegerField()),
                ('over_18', models.BooleanField()),
                ('thumbnail', models.CharField(blank=True, max_length=80, null=True)),
                ('hide_score', models.BooleanField()),
                ('link_flair_css_class', models.CharField(blank=True, max_length=102, null=True)),
                ('author_flair_css_class', models.CharField(blank=True, max_length=95, null=True)),
                ('archived', models.BooleanField()),
                ('is_self', models.BooleanField()),
                ('permalink', models.CharField(max_length=131)),
                ('name', models.CharField(max_length=9)),
                ('author_flair_text', models.CharField(blank=True, max_length=256, null=True)),
                ('quarantine', models.BooleanField()),
                ('link_flair_text', models.CharField(blank=True, max_length=128, null=True)),
                ('distinguished', models.CharField(blank=True, max_length=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Revision',
            fields=[
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('revid', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('score', models.IntegerField(default=-1)),
                ('user', models.CharField(max_length=100)),
                ('editcount', models.IntegerField(default=0)),
                ('registration', models.DateTimeField(default=django.utils.timezone.now)),
                ('flags', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampledRedditThread',
            fields=[
                ('uid', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('body', models.CharField(max_length=74185)),
                ('body_length', models.IntegerField(default=0)),
                ('body_lexicon_count', models.IntegerField(default=0)),
                ('body_sentence_count', models.IntegerField(default=0)),
                ('body_num_links', models.IntegerField(default=0)),
                ('body_percent_uppercase', models.IntegerField(default=0)),
                ('body_percent_spaces', models.IntegerField(default=0)),
                ('body_percent_punctuation', models.IntegerField(default=0)),
                ('body_starts_capitalized', models.BooleanField(default=False)),
                ('body_coleman_liau_index', models.IntegerField(default=0)),
                ('score', models.IntegerField()),
                ('num_comments', models.IntegerField(default=0)),
                ('is_root', models.BooleanField(default=False)),
                ('context', models.CharField(blank=True, max_length=115, null=True)),
                ('author', models.CharField(max_length=36)),
                ('timestamp', models.DateTimeField()),
                ('has_wiki_link', models.BooleanField(default=False)),
                ('has_good_wiki_link', models.BooleanField(default=False)),
                ('num_wiki_links', models.IntegerField(default=0)),
                ('day_prior_avg_score', models.IntegerField(blank=True, null=True)),
                ('day_of_avg_score', models.IntegerField(blank=True, null=True)),
                ('week_after_avg_score', models.IntegerField(blank=True, null=True)),
                ('wiki_content_analyzed', models.BooleanField(default=False)),
                ('wiki_content_error', models.IntegerField(default=False)),
                ('day_of_week', models.IntegerField(blank=True, null=True)),
                ('day_of_month', models.IntegerField(blank=True, null=True)),
                ('hour', models.IntegerField(blank=True, null=True)),
                ('user_created_utc', models.DateTimeField(blank=True, null=True)),
                ('seconds_since_user_creation', models.IntegerField(blank=True, null=True)),
                ('num_edits', models.IntegerField(default=0)),
                ('num_new_edits', models.IntegerField(default=0)),
                ('num_old_edits', models.IntegerField(default=0)),
                ('num_inactive_edits', models.IntegerField(default=0)),
                ('num_active_edits', models.IntegerField(default=0)),
                ('num_minor_edits', models.IntegerField(default=0)),
                ('num_major_edits', models.IntegerField(default=0)),
                ('num_edits_prev_week', models.IntegerField(default=0)),
                ('num_inactive_edits_prev_week', models.IntegerField(default=0)),
                ('num_active_edits_prev_week', models.IntegerField(default=0)),
                ('num_minor_edits_prev_week', models.IntegerField(default=0)),
                ('num_major_edits_prev_week', models.IntegerField(default=0)),
                ('num_edits_preceding_post', models.IntegerField(default=0)),
                ('user_info_processed', models.BooleanField(default=False)),
                ('user_comment_karma', models.IntegerField(default=0)),
                ('user_link_karma', models.IntegerField(default=0)),
                ('user_is_mod', models.BooleanField(default=False)),
                ('user_is_suspended', models.BooleanField(default=False)),
                ('user_is_deleted', models.BooleanField(default=False)),
                ('url', models.CharField(max_length=2083)),
                ('title', models.CharField(max_length=1182)),
                ('title_length', models.IntegerField(default=0)),
                ('title_lexicon_count', models.IntegerField(default=0)),
                ('title_sentence_count', models.IntegerField(default=0)),
                ('title_percent_uppercase', models.IntegerField(default=0)),
                ('title_percent_spaces', models.IntegerField(default=0)),
                ('title_percent_punctuation', models.IntegerField(default=0)),
                ('title_starts_capitalized', models.BooleanField(default=False)),
                ('title_coleman_liau_index', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SampledStackOverflowPost',
            fields=[
                ('uid', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('body', models.CharField(max_length=74185)),
                ('body_length', models.IntegerField(default=0)),
                ('body_lexicon_count', models.IntegerField(default=0)),
                ('body_sentence_count', models.IntegerField(default=0)),
                ('body_num_links', models.IntegerField(default=0)),
                ('body_percent_uppercase', models.IntegerField(default=0)),
                ('body_percent_spaces', models.IntegerField(default=0)),
                ('body_percent_punctuation', models.IntegerField(default=0)),
                ('body_starts_capitalized', models.BooleanField(default=False)),
                ('body_coleman_liau_index', models.IntegerField(default=0)),
                ('score', models.IntegerField()),
                ('num_comments', models.IntegerField(default=0)),
                ('is_root', models.BooleanField(default=False)),
                ('context', models.CharField(blank=True, max_length=115, null=True)),
                ('author', models.CharField(max_length=36)),
                ('timestamp', models.DateTimeField()),
                ('has_wiki_link', models.BooleanField(default=False)),
                ('has_good_wiki_link', models.BooleanField(default=False)),
                ('num_wiki_links', models.IntegerField(default=0)),
                ('day_prior_avg_score', models.IntegerField(blank=True, null=True)),
                ('day_of_avg_score', models.IntegerField(blank=True, null=True)),
                ('week_after_avg_score', models.IntegerField(blank=True, null=True)),
                ('wiki_content_analyzed', models.BooleanField(default=False)),
                ('wiki_content_error', models.IntegerField(default=False)),
                ('day_of_week', models.IntegerField(blank=True, null=True)),
                ('day_of_month', models.IntegerField(blank=True, null=True)),
                ('hour', models.IntegerField(blank=True, null=True)),
                ('user_created_utc', models.DateTimeField(blank=True, null=True)),
                ('seconds_since_user_creation', models.IntegerField(blank=True, null=True)),
                ('num_edits', models.IntegerField(default=0)),
                ('num_new_edits', models.IntegerField(default=0)),
                ('num_old_edits', models.IntegerField(default=0)),
                ('num_inactive_edits', models.IntegerField(default=0)),
                ('num_active_edits', models.IntegerField(default=0)),
                ('num_minor_edits', models.IntegerField(default=0)),
                ('num_major_edits', models.IntegerField(default=0)),
                ('num_edits_prev_week', models.IntegerField(default=0)),
                ('num_inactive_edits_prev_week', models.IntegerField(default=0)),
                ('num_active_edits_prev_week', models.IntegerField(default=0)),
                ('num_minor_edits_prev_week', models.IntegerField(default=0)),
                ('num_major_edits_prev_week', models.IntegerField(default=0)),
                ('num_edits_preceding_post', models.IntegerField(default=0)),
                ('user_reputation', models.IntegerField(default=0)),
                ('question_asked_utc', models.DateTimeField(blank=True, null=True)),
                ('num_pageviews', models.IntegerField(default=0)),
                ('tags_string', models.CharField(blank=True, max_length=115, null=True)),
                ('num_tags', models.IntegerField(default=0)),
                ('response_time', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StackOverflowAnswer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('body', models.CharField(max_length=58431)),
                ('comment_count', models.IntegerField(default=0)),
                ('community_owned_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField()),
                ('last_activity_date', models.DateTimeField()),
                ('last_edit_date', models.DateTimeField(blank=True, null=True)),
                ('last_editor_display_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_editor_user_id', models.IntegerField(blank=True, null=True)),
                ('owner_display_name', models.CharField(max_length=30)),
                ('owner_user_id', models.IntegerField(blank=True, null=True)),
                ('post_type_id', models.IntegerField()),
                ('score', models.IntegerField(default=0)),
                ('tags', models.CharField(max_length=115)),
            ],
        ),
        migrations.CreateModel(
            name='StackOverflowQuestion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=192)),
                ('body', models.CharField(max_length=58431)),
                ('accepted_answer_id', models.IntegerField(blank=True, null=True)),
                ('answer_count', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
                ('community_owned_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField()),
                ('favorite_count', models.IntegerField(default=0)),
                ('last_activity_date', models.DateTimeField()),
                ('last_edit_date', models.DateTimeField(blank=True, null=True)),
                ('last_editor_display_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_editor_user_id', models.IntegerField(blank=True, null=True)),
                ('owner_display_name', models.CharField(max_length=30)),
                ('owner_user_id', models.IntegerField()),
                ('post_type_id', models.IntegerField()),
                ('score', models.IntegerField(default=0)),
                ('tags', models.CharField(max_length=115)),
                ('view_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StackOverflowUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('display_name', models.CharField(max_length=36)),
                ('about_me', models.CharField(blank=True, max_length=5999, null=True)),
                ('age', models.CharField(blank=True, max_length=4, null=True)),
                ('creation_date', models.DateTimeField()),
                ('last_access_date', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('reputation', models.IntegerField(default=0)),
                ('up_votes', models.IntegerField(default=0)),
                ('down_votes', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('profile_image_url', models.CharField(blank=True, max_length=105, null=True)),
                ('website_url', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ThreadLog',
            fields=[
                ('uid', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('complete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='WikiLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=300)),
                ('language_code', models.CharField(blank=True, max_length=10, null=True)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='sampledstackoverflowpost',
            name='wiki_links',
            field=models.ManyToManyField(to='portal.WikiLink'),
        ),
        migrations.AddField(
            model_name='sampledredditthread',
            name='wiki_links',
            field=models.ManyToManyField(to='portal.WikiLink'),
        ),
        migrations.AddField(
            model_name='revision',
            name='wiki_link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.WikiLink'),
        ),
    ]
